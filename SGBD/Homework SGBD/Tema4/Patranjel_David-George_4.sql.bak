/*Tema 4 - David Patranjel 251*/
/*Partea 1*/
/*ex1*/
with dep_cu_angajati as(
    select d.department_id, count(*) as nr_ang
    from departments d
    join employees e on e.department_id = d.department_id
    group by d.department_id
)
    
select 
    case
        when da.nr_ang is null then 'In departamentul '|| d.department_name ||' nu lucreaza angajati'
        when da.nr_ang = 1 then 'In departamentul '|| d.department_name||' lucreaza un angajat'
        else 'In departamentul '||d.department_name ||' lucreaza '|| da.nr_ang||' angajati'
    end case
from dep_cu_angajati da
right join departments d on da.department_id = d.department_id
order by d.department_name;

/*ex2i*/
DECLARE
    v_nr number(4);
    v_nume departments.department_name%TYPE;
    TYPE text IS TABLE OF varchar2(200);
    v_aux text := text(); 
    CURSOR c IS
        SELECT department_name nume, COUNT(employee_id) nr  
        FROM   departments d, employees e
        WHERE  d.department_id=e.department_id(+) 
        GROUP BY department_name; 
BEGIN
    OPEN c;
    LOOP
        FETCH c INTO v_nume,v_nr;
        EXIT WHEN c%NOTFOUND;
        v_aux.extend;
        IF v_nr=0 THEN 
            v_aux(v_aux.last) := 'In departamentul '|| v_nume||' nu lucreaza angajati';
        ELSIF v_nr=1 THEN 
            v_aux(v_aux.last) := 'In departamentul '|| v_nume||' lucreaza un angajat';
        ELSE 
            v_aux(v_aux.last) := 'In departamentul '|| v_nume||' lucreaza '|| v_nr||' angajati';
        END IF;
    END LOOP;
    CLOSE c;
    
    FOR i IN v_aux.FIRST..v_aux.LAST LOOP
        DBMS_OUTPUT.PUT_LINE(v_aux(i)|| ''); 
    END LOOP;
END;

/*ex2ii*/
DECLARE
    v_nr number(4);
    v_nume departments.department_name%TYPE;
    TYPE text1 IS TABLE OF varchar2(200) INDEX BY BINARY_INTEGER;
    v_aux text1; 

BEGIN
    
    select 
        case
            when da.nr_ang is null then 'In departamentul '|| d.department_name ||' nu lucreaza angajati'
            when da.nr_ang = 1 then 'In departamentul '|| d.department_name||' lucreaza un angajat'
            else 'In departamentul '||d.department_name ||' lucreaza '|| da.nr_ang||' angajati'
        end case
    bulk collect into v_aux
    from (
        select d.department_id, count(*) as nr_ang
        from departments d
        join employees e on e.department_id = d.department_id
        group by d.department_id
    )da
    right join departments d on da.department_id = d.department_id
    order by d.department_name;
    
    FOR i IN v_aux.FIRST..v_aux.LAST LOOP
        DBMS_OUTPUT.PUT_LINE(v_aux(i)|| ''); 
    END LOOP;
END;

/*ex5*/
select *
from (
    SELECT  sef.employee_id cod, 
        MAX(sef.last_name) nume, 
        count(*) nr
    FROM employees sef, employees ang
    WHERE    ang.manager_id =sef.employee_id
    GROUP BY sef.employee_id
    ORDER BY nr DESC
)
where rownum <= 3;

/*ex10 - cursor clasic*/
DECLARE
    cursor c is
        SELECT d.department_id, d.department_name, e.last_name
        FROM   departments d
        JOIN employees e ON e.department_id = d.department_id
        WHERE d.department_id IN (10,20,30,40)
        ORDER BY d.department_id;
    v_old departments.department_id%TYPE := 0;
    v_depid departments.department_id%TYPE;
    v_depname departments.department_name%TYPE;
    v_lastname employees.last_name%TYPE;
BEGIN
    OPEN c;
    LOOP
        FETCH c INTO v_depid, v_depname, v_lastname;
        EXIT WHEN c%NOTFOUND;
        if(v_old <> v_depid) then
            DBMS_OUTPUT.PUT_LINE('-------------------------------------');
            DBMS_OUTPUT.PUT_LINE ('DEPARTAMENT '||v_depname);
            DBMS_OUTPUT.PUT_LINE('-------------------------------------');
            v_old := v_depid;
        end if;
        DBMS_OUTPUT.PUT_LINE (v_lastname);
    END LOOP;
    CLOSE c;
END;

/*ex10 - ciclu cursor*/
DECLARE
    cursor c is
        SELECT d.department_id, d.department_name, e.last_name
        FROM   departments d
        JOIN employees e ON e.department_id = d.department_id
        WHERE d.department_id IN (10,20,30,40)
        ORDER BY d.department_id;
    v_old departments.department_id%TYPE := 0;
BEGIN
    FOR v_dept IN c LOOP
        if(v_old <> v_dept.department_id) then
            DBMS_OUTPUT.PUT_LINE('-------------------------------------');
            DBMS_OUTPUT.PUT_LINE ('DEPARTAMENT '||v_dept.department_name);
            DBMS_OUTPUT.PUT_LINE('-------------------------------------');
            v_old := v_dept.department_id;
        end if;
        DBMS_OUTPUT.PUT_LINE (v_dept.last_name);
    END LOOP;
END;

/*Partea 2*/
/*ex1*/
/*mi-am creat o cpoie a tabelei pentru a testa cazul in care nu sunt angatai pe un job*/
CREATE TABLE jobs_dgp as select * from jobs;
COMMIT;
INSERT INTO jobs_dgp VALUES
('NO_EX', 'Nu exista', 1000, 2000);
commit;

/*cursor clasic*/
DECLARE
    cursor c is
        SELECT j.job_id, j.job_title, e.last_name
        FROM   jobs_dgp j
        FULL OUTER JOIN employees e ON e.job_id = j.job_id
        ORDER BY j.job_id;
    v_old jobs.job_id%TYPE := 0;
    v_jobid jobs.job_id%TYPE;
    v_jobname jobs.job_title%TYPE;
    v_lastname employees.last_name%TYPE;
BEGIN
    OPEN c;
    LOOP
        FETCH c INTO v_jobid, v_jobname, v_lastname;
        EXIT WHEN c%NOTFOUND;
        if(v_old <> v_jobid) then
            DBMS_OUTPUT.PUT_LINE('-------------------------------------');
            DBMS_OUTPUT.PUT_LINE ('JOB '||v_jobname);
            DBMS_OUTPUT.PUT_LINE('-------------------------------------');
            v_old := v_jobid;
        end if;
        if v_lastname is null then
            DBMS_OUTPUT.PUT_LINE ('Nu sunt angajati cu acest job');
        else
            DBMS_OUTPUT.PUT_LINE (v_lastname);
        end if;
    END LOOP;
    CLOSE c;
EXCEPTION
    when CURSOR_ALREADY_OPEN then
        DBMS_OUTPUT.PUT_LINE('Cursor deja deschis');
    when INVALID_CURSOR then
        DBMS_OUTPUT.PUT_LINE('Cursorul este inchis');
    when no_data_found then
        DBMS_OUTPUT.PUT_LINE('Nicio linie returnata');
    when others then
        DBMS_OUTPUT.PUT_LINE('Alta eroare');
END;

/*ciclu cursor*/
DECLARE
    cursor c is
        SELECT j.job_id, j.job_title, e.last_name
        FROM   jobs_dgp j
        FULL OUTER JOIN employees e ON e.job_id = j.job_id
        ORDER BY j.job_id;
    v_old jobs.job_id%TYPE := 0;
BEGIN
    FOR v_aux in c loop
        if(v_old <> v_aux.job_id) then
            DBMS_OUTPUT.PUT_LINE('-------------------------------------');
            DBMS_OUTPUT.PUT_LINE ('JOB '||v_aux.job_title);
            DBMS_OUTPUT.PUT_LINE('-------------------------------------');
            v_old := v_aux.job_id;
        end if;
        if v_aux.last_name is null then
            DBMS_OUTPUT.PUT_LINE ('Nu sunt angajati cu acest job');
        else
            DBMS_OUTPUT.PUT_LINE (v_aux.last_name);
        end if;
    END LOOP;
EXCEPTION
    when CURSOR_ALREADY_OPEN then
        DBMS_OUTPUT.PUT_LINE('Cursor deja deschis');
    when INVALID_CURSOR then
        DBMS_OUTPUT.PUT_LINE('Cursorul este inchis');
    when no_data_found then
        DBMS_OUTPUT.PUT_LINE('Nicio linie returnata');
    when others then
        DBMS_OUTPUT.PUT_LINE('Alta eroare');
END;

/*ciclu cursor cu subcereri*/
DECLARE
    v_old jobs.job_id%TYPE := 0;
BEGIN
    FOR v_aux in(SELECT j.job_id, j.job_title, e.last_name
                    FROM   jobs_dgp j
                    FULL OUTER JOIN employees e ON e.job_id = j.job_id
                    ORDER BY j.job_id)
    loop
        if(v_old <> v_aux.job_id) then
            DBMS_OUTPUT.PUT_LINE('-------------------------------------');
            DBMS_OUTPUT.PUT_LINE ('JOB '||v_aux.job_title);
            DBMS_OUTPUT.PUT_LINE('-------------------------------------');
            v_old := v_aux.job_id;
        end if;
        if v_aux.last_name is null then
            DBMS_OUTPUT.PUT_LINE ('Nu sunt angajati cu acest job');
        else
            DBMS_OUTPUT.PUT_LINE (v_aux.last_name);
        end if;
    END LOOP;
EXCEPTION
    when CURSOR_ALREADY_OPEN then
        DBMS_OUTPUT.PUT_LINE('Cursor deja deschis');
    when INVALID_CURSOR then
        DBMS_OUTPUT.PUT_LINE('Cursorul este inchis');
    when no_data_found then
        DBMS_OUTPUT.PUT_LINE('Nicio linie returnata');
    when others then
        DBMS_OUTPUT.PUT_LINE('Alta eroare');
END;

/*expresii cursor*/
DECLARE
    type refcursor is ref cursor;
    cursor c_job is
        SELECT j.job_title,
            cursor (select e.last_name
                    from employees e
                    where e.job_id = j.job_id)
        FROM   jobs_dgp j
        ORDER BY j.job_id;
    flag number(1);
    v_cursor refcursor;
    v_jobname jobs.job_title%TYPE;
    v_lastname employees.last_name%TYPE;
BEGIN
    open c_job;
    loop
        fetch c_job into v_jobname, v_cursor;
        exit when c_job%NOTFOUND;
        flag := 1;
        DBMS_OUTPUT.PUT_LINE('-------------------------------------');
        DBMS_OUTPUT.PUT_LINE ('JOB '||v_jobname);
        DBMS_OUTPUT.PUT_LINE('-------------------------------------');
        loop
            fetch v_cursor into v_lastname;
            exit when v_cursor%NOTFOUND;
            flag := 0;
            DBMS_OUTPUT.PUT_LINE (v_lastname);
        end loop;
        if flag = 1 then
            DBMS_OUTPUT.PUT_LINE ('Nu sunt angajati cu acest job');
        end if;
    end loop;
    close c_job;
EXCEPTION
    when CURSOR_ALREADY_OPEN then
        DBMS_OUTPUT.PUT_LINE('Cursor deja deschis');
    when INVALID_CURSOR then
        DBMS_OUTPUT.PUT_LINE('Cursorul este inchis');
    when no_data_found then
        DBMS_OUTPUT.PUT_LINE('Nicio linie returnata');
    when others then
        DBMS_OUTPUT.PUT_LINE('Alta eroare');
END;

/*ex2*/
DECLARE
    type refcursor is ref cursor;
    cursor c_job is
        SELECT j.job_title,
            cursor (select e.last_name, e.salary
                    from employees e
                    where e.job_id = j.job_id)
        FROM   jobs_dgp j
        ORDER BY j.job_id;
    flag number(1);
    counter number(3);
    counter_tot number(4) := 0;
    sum_sal number(10);
    sum_sal_tot number(11) := 0;
    v_cursor refcursor;
    v_jobname jobs.job_title%TYPE;
    v_lastname employees.last_name%TYPE;
    v_salary employees.salary%TYPE;
BEGIN
    open c_job;
    loop
        fetch c_job into v_jobname, v_cursor;
        exit when c_job%NOTFOUND;
        flag := 1;
        counter := 1;
        sum_sal := 0;
        DBMS_OUTPUT.PUT_LINE('-------------------------------------');
        DBMS_OUTPUT.PUT_LINE ('JOB '||v_jobname);
        DBMS_OUTPUT.PUT_LINE('-------------------------------------');
        loop
            fetch v_cursor into v_lastname, v_salary;
            exit when v_cursor%NOTFOUND;
            flag := 0;
            DBMS_OUTPUT.PUT_LINE (counter || ') ' || v_lastname);
            counter := counter + 1;
            sum_sal := sum_sal + v_salary;
        end loop;
        if flag = 1 then
            DBMS_OUTPUT.PUT_LINE ('Nu sunt angajati cu acest job');
        else
            counter_tot := counter_tot + (counter - 1);
            sum_sal_tot := sum_sal_tot + sum_sal;
            DBMS_OUTPUT.PUT_LINE ('In total sunt ' || (counter - 1) || ' angajati');
            DBMS_OUTPUT.PUT_LINE ('Valoarea lunara a venitului este de ' || sum_sal);
            DBMS_OUTPUT.PUT_LINE ('Valoarea medie a venitului este de ' || (sum_sal/(counter - 1)) || ' angajati');

        end if;
    end loop;
    close c_job;
    DBMS_OUTPUT.PUT_LINE('-------------------------------------');
    DBMS_OUTPUT.PUT_LINE ('In total sunt ' || counter_tot || ' angajati');
    DBMS_OUTPUT.PUT_LINE ('Valoarea lunara a venitului este de ' || sum_sal_tot);
    DBMS_OUTPUT.PUT_LINE ('Valoarea medie a venitului este de ' || (sum_sal_tot/counter_tot));
EXCEPTION
    when CURSOR_ALREADY_OPEN then
        DBMS_OUTPUT.PUT_LINE('Cursor deja deschis');
    when INVALID_CURSOR then
        DBMS_OUTPUT.PUT_LINE('Cursorul este inchis');
    when no_data_found then
        DBMS_OUTPUT.PUT_LINE('Nicio linie returnata');
    when others then
        DBMS_OUTPUT.PUT_LINE('Alta eroare');
END;

/*ex3*/
DECLARE
    type rec is record(
        nume employees.last_name%TYPE,
        salariu employees.salary%TYPE);
    type lista is table of rec;
    type refcursor is ref cursor;
    cursor c_job is
        SELECT j.job_title,
            cursor (select e.last_name, e.salary, e.commission_pct
                    from employees e
                    where e.job_id = j.job_id)
        FROM   jobs_dgp j
        ORDER BY j.job_id;
    
    v_lista lista := lista();
    flag number(1);
    counter number(3);
    counter_tot number(4) := 0;
    sum_sal number(10);
    sum_sal_tot number(11) := 0;
    v_cursor refcursor;
    v_jobname jobs.job_title%TYPE;
    v_lastname employees.last_name%TYPE;
    v_salary employees.salary%TYPE;
    v_comission employees.commission_pct%TYPE;
BEGIN
    open c_job;
    loop
        fetch c_job into v_jobname, v_cursor;
        exit when c_job%NOTFOUND;
        flag := 1;
        counter := 1;
        sum_sal := 0;
        DBMS_OUTPUT.PUT_LINE('-------------------------------------');
        DBMS_OUTPUT.PUT_LINE ('JOB '||v_jobname);
        DBMS_OUTPUT.PUT_LINE('-------------------------------------');
        loop
            fetch v_cursor into v_lastname, v_salary, v_comission;
            exit when v_cursor%NOTFOUND;
            flag := 0;
            DBMS_OUTPUT.PUT_LINE (counter || ') ' || v_lastname);
            counter := counter + 1;
            if v_comission is not null then v_salary := v_salary * (1 + v_comission);
            end if;
            sum_sal := sum_sal + v_salary;
            v_lista.extend;
            v_lista(v_lista.last).nume := v_lastname;
            v_lista(v_lista.last).salariu := v_salary;
        end loop;
        if flag = 1 then
            DBMS_OUTPUT.PUT_LINE ('Nu sunt angajati cu acest job');
        else
            counter_tot := counter_tot + (counter - 1);
            sum_sal_tot := sum_sal_tot + sum_sal;
            DBMS_OUTPUT.PUT_LINE ('In total sunt ' || (counter - 1) || ' angajati');
            DBMS_OUTPUT.PUT_LINE ('Valoarea lunara a venitului este de ' || sum_sal);
            DBMS_OUTPUT.PUT_LINE ('Valoarea medie a venitului este de ' || (sum_sal/(counter - 1)) || ' angajati');

        end if;
    end loop;
    close c_job;
    DBMS_OUTPUT.PUT_LINE('-------------------------------------');
    DBMS_OUTPUT.PUT_LINE ('In total sunt ' || counter_tot || ' angajati');
    DBMS_OUTPUT.PUT_LINE ('Valoarea lunara a venitului este de ' || sum_sal_tot);
    DBMS_OUTPUT.PUT_LINE ('Valoarea medie a venitului este de ' || (sum_sal_tot/counter_tot));
    DBMS_OUTPUT.PUT_LINE('-------------------------------------');
    for i in v_lista.first..v_lista.last loop
        DBMS_OUTPUT.PUT_LINE (v_lista(i).nume || ' are ' || round(v_lista(i).salariu*100/sum_sal_tot, 2) || '% din venitul total');
    end loop;
EXCEPTION
    when CURSOR_ALREADY_OPEN then
        DBMS_OUTPUT.PUT_LINE('Cursor deja deschis');
    when INVALID_CURSOR then
        DBMS_OUTPUT.PUT_LINE('Cursorul este inchis');
    when no_data_found then
        DBMS_OUTPUT.PUT_LINE('Nicio linie returnata');
    when others then
        DBMS_OUTPUT.PUT_LINE('Alta eroare');
END;

/*ex4*/
DECLARE
    type rec is record(
        nume employees.last_name%TYPE,
        salariu employees.salary%TYPE);
    type lista is table of rec;
    type refcursor is ref cursor;
    cursor c_job is
        SELECT j.job_title,
            cursor (select e.last_name, e.salary, e.commission_pct
                    from employees e
                    where e.job_id = j.job_id
                    order by e.salary desc)
        FROM   jobs_dgp j
        ORDER BY j.job_id;
    
    v_lista lista := lista();
    flag number(1);
    counter number(3);
    counter_tot number(4) := 0;
    sum_sal number(10);
    sum_sal_tot number(11) := 0;
    v_cursor refcursor;
    v_jobname jobs.job_title%TYPE;
    v_lastname employees.last_name%TYPE;
    v_salary employees.salary%TYPE;
    v_comission employees.commission_pct%TYPE;
BEGIN
    open c_job;
    loop
        fetch c_job into v_jobname, v_cursor;
        exit when c_job%NOTFOUND;
        flag := 1;
        counter := 1;
        sum_sal := 0;
        DBMS_OUTPUT.PUT_LINE('-------------------------------------');
        DBMS_OUTPUT.PUT_LINE ('JOB '||v_jobname);
        DBMS_OUTPUT.PUT_LINE('-------------------------------------');
        loop
            fetch v_cursor into v_lastname, v_salary, v_comission;
            exit when v_cursor%NOTFOUND or counter >= 6;
            flag := 0;
            DBMS_OUTPUT.PUT_LINE (counter || ') ' || v_lastname || ' ' || v_salary);
            counter := counter + 1;
            if v_comission is not null then v_salary := v_salary * (1 + v_comission);
            end if;
            sum_sal := sum_sal + v_salary;
            v_lista.extend;
            v_lista(v_lista.last).nume := v_lastname;
            v_lista(v_lista.last).salariu := v_salary;
        end loop;
        if flag = 1 then
            DBMS_OUTPUT.PUT_LINE ('Nu sunt angajati cu acest job');
        else
            if not v_cursor%NOTFOUND then DBMS_OUTPUT.PUT_LINE ('Mai mult de 5 angajati');
            end if;
            counter_tot := counter_tot + (counter - 1);
            sum_sal_tot := sum_sal_tot + sum_sal;
            DBMS_OUTPUT.PUT_LINE ('In total sunt ' || (counter - 1) || ' angajati');
            DBMS_OUTPUT.PUT_LINE ('Valoarea lunara a venitului este de ' || sum_sal);
            DBMS_OUTPUT.PUT_LINE ('Valoarea medie a venitului este de ' || (sum_sal/(counter - 1)) || ' angajati');

        end if;
    end loop;
    close c_job;
    DBMS_OUTPUT.PUT_LINE('-------------------------------------');
    DBMS_OUTPUT.PUT_LINE ('In total sunt ' || counter_tot || ' angajati');
    DBMS_OUTPUT.PUT_LINE ('Valoarea lunara a venitului este de ' || sum_sal_tot);
    DBMS_OUTPUT.PUT_LINE ('Valoarea medie a venitului este de ' || (sum_sal_tot/counter_tot));
    DBMS_OUTPUT.PUT_LINE('-------------------------------------');
    for i in v_lista.first..v_lista.last loop
        DBMS_OUTPUT.PUT_LINE (v_lista(i).nume || ' are ' || round(v_lista(i).salariu*100/sum_sal_tot, 2) || '% din venitul total');
    end loop;
EXCEPTION
    when CURSOR_ALREADY_OPEN then
        DBMS_OUTPUT.PUT_LINE('Cursor deja deschis');
    when INVALID_CURSOR then
        DBMS_OUTPUT.PUT_LINE('Cursorul este inchis');
    when no_data_found then
        DBMS_OUTPUT.PUT_LINE('Nicio linie returnata');
    when others then
        DBMS_OUTPUT.PUT_LINE('Alta eroare');
END;

/*ex5*/
DECLARE
    type rec is record(
        nume employees.last_name%TYPE,
        salariu employees.salary%TYPE);
    type lista is table of rec;
    type refcursor is ref cursor;
    cursor c_job is
        SELECT j.job_title,
            cursor (select e.last_name, e.salary, e.commission_pct
                    from employees e
                    where e.job_id = j.job_id
                    order by e.salary desc)
        FROM   jobs_dgp j
        ORDER BY j.job_id;
    
    v_lista lista := lista();
    flag number(1);
    counter number(3);
    counter_tot number(4) := 0;
    sum_sal number(10);
    sum_sal_tot number(11) := 0;
    v_cursor refcursor;
    v_jobname jobs.job_title%TYPE;
    v_lastname employees.last_name%TYPE;
    v_salary employees.salary%TYPE;
    v_comission employees.commission_pct%TYPE;
    v_old_salary employees.salary%TYPE;
    count_sal number(3);
BEGIN
    open c_job;
    loop
        fetch c_job into v_jobname, v_cursor;
        exit when c_job%NOTFOUND;
        flag := 1;
        counter := 1;
        sum_sal := 0;
        count_sal := 0;
        v_old_salary := 0;
        DBMS_OUTPUT.PUT_LINE('-------------------------------------');
        DBMS_OUTPUT.PUT_LINE ('JOB '||v_jobname);
        DBMS_OUTPUT.PUT_LINE('-------------------------------------');
        loop
            fetch v_cursor into v_lastname, v_salary, v_comission;
            exit when v_cursor%NOTFOUND or count_sal >= 5;
            flag := 0;
            DBMS_OUTPUT.PUT_LINE (counter || ') ' || v_lastname || ' ' || v_salary);
            counter := counter + 1;
            if v_comission is not null then v_salary := v_salary * (1 + v_comission);
            end if;
            sum_sal := sum_sal + v_salary;
            v_lista.extend;
            v_lista(v_lista.last).nume := v_lastname;
            v_lista(v_lista.last).salariu := v_salary;
            if (v_old_salary <> v_salary) then count_sal := count_sal + 1;
            end if;
            v_old_salary := v_salary;
        end loop;
        if flag = 1 then
            DBMS_OUTPUT.PUT_LINE ('Nu sunt angajati cu acest job');
        else
            if not v_cursor%NOTFOUND then DBMS_OUTPUT.PUT_LINE ('Mai mult de 5 angajati');
            end if;
            counter_tot := counter_tot + (counter - 1);
            sum_sal_tot := sum_sal_tot + sum_sal;
            DBMS_OUTPUT.PUT_LINE ('In total sunt ' || (counter - 1) || ' angajati');
            DBMS_OUTPUT.PUT_LINE ('Valoarea lunara a venitului este de ' || sum_sal);
            DBMS_OUTPUT.PUT_LINE ('Valoarea medie a venitului este de ' || (sum_sal/(counter - 1)) || ' angajati');

        end if;
    end loop;
    close c_job;
    DBMS_OUTPUT.PUT_LINE('-------------------------------------');
    DBMS_OUTPUT.PUT_LINE ('In total sunt ' || counter_tot || ' angajati');
    DBMS_OUTPUT.PUT_LINE ('Valoarea lunara a venitului este de ' || sum_sal_tot);
    DBMS_OUTPUT.PUT_LINE ('Valoarea medie a venitului este de ' || (sum_sal_tot/counter_tot));
    DBMS_OUTPUT.PUT_LINE('-------------------------------------');
    for i in v_lista.first..v_lista.last loop
        DBMS_OUTPUT.PUT_LINE (v_lista(i).nume || ' are ' || round(v_lista(i).salariu*100/sum_sal_tot, 2) || '% din venitul total');
    end loop;
EXCEPTION
    when CURSOR_ALREADY_OPEN then
        DBMS_OUTPUT.PUT_LINE('Cursor deja deschis');
    when INVALID_CURSOR then
        DBMS_OUTPUT.PUT_LINE('Cursorul este inchis');
    when no_data_found then
        DBMS_OUTPUT.PUT_LINE('Nicio linie returnata');
    when others then
        DBMS_OUTPUT.PUT_LINE('Alta eroare');
END;

